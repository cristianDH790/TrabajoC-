// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisualizadorEstructuras.Models;

#nullable disable

namespace VisualizadorEstructuras.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250628233306_StockEnLibro")]
    partial class StockEnLibro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("VisualizadorEstructuras.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Libros de narrativa ficticia",
                            Nombre = "Ficción"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Libros basados en hechos reales",
                            Nombre = "No Ficción"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Libros de estudio y referencia",
                            Nombre = "Académico"
                        });
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Anio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disponible")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPrestamo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Anio = 1967,
                            Autor = "Gabriel García Márquez",
                            Categoria = "Ficción",
                            Disponible = true,
                            ISBN = "978-0307474728",
                            Stock = 2,
                            Titulo = "Cien Años de Soledad"
                        },
                        new
                        {
                            Id = 2,
                            Anio = 1963,
                            Autor = "Julio Cortázar",
                            Categoria = "Ficción",
                            Disponible = true,
                            ISBN = "978-8437604947",
                            Stock = 2,
                            Titulo = "Rayuela"
                        },
                        new
                        {
                            Id = 3,
                            Anio = 1605,
                            Autor = "Miguel de Cervantes",
                            Categoria = "Ficción",
                            Disponible = true,
                            ISBN = "978-8491050297",
                            Stock = 2,
                            Titulo = "Don Quijote de la Mancha"
                        },
                        new
                        {
                            Id = 4,
                            Anio = 1949,
                            Autor = "Jorge Luis Borges",
                            Categoria = "Ficción",
                            Disponible = true,
                            ISBN = "978-8426404187",
                            Stock = 2,
                            Titulo = "El Aleph"
                        },
                        new
                        {
                            Id = 5,
                            Anio = 2011,
                            Autor = "Yuval Noah Harari",
                            Categoria = "No Ficción",
                            Disponible = true,
                            ISBN = "978-8499924213",
                            Stock = 2,
                            Titulo = "Sapiens"
                        },
                        new
                        {
                            Id = 6,
                            Anio = 2018,
                            Autor = "Stephen Hawking",
                            Categoria = "No Ficción",
                            Disponible = true,
                            ISBN = "978-8491392065",
                            Stock = 2,
                            Titulo = "Breves respuestas a las grandes preguntas"
                        },
                        new
                        {
                            Id = 7,
                            Anio = 1947,
                            Autor = "Ana Frank",
                            Categoria = "No Ficción",
                            Disponible = true,
                            ISBN = "978-8497593794",
                            Stock = 2,
                            Titulo = "El diario de Ana Frank"
                        },
                        new
                        {
                            Id = 8,
                            Anio = 1997,
                            Autor = "Miguel Ruiz",
                            Categoria = "No Ficción",
                            Disponible = true,
                            ISBN = "978-1878424310",
                            Stock = 2,
                            Titulo = "Los cuatro acuerdos"
                        },
                        new
                        {
                            Id = 9,
                            Anio = 1941,
                            Autor = "Aurelio Baldor",
                            Categoria = "Académico",
                            Disponible = true,
                            ISBN = "978-9702602532",
                            Stock = 2,
                            Titulo = "Álgebra de Baldor"
                        },
                        new
                        {
                            Id = 10,
                            Anio = 2008,
                            Autor = "James Stewart",
                            Categoria = "Académico",
                            Disponible = true,
                            ISBN = "978-6074817448",
                            Stock = 2,
                            Titulo = "Cálculo"
                        },
                        new
                        {
                            Id = 11,
                            Anio = 2018,
                            Autor = "Sears y Zemansky",
                            Categoria = "Académico",
                            Disponible = true,
                            ISBN = "978-6073223493",
                            Stock = 2,
                            Titulo = "Física Universitaria"
                        },
                        new
                        {
                            Id = 12,
                            Anio = 2010,
                            Autor = "Raymond Chang",
                            Categoria = "Académico",
                            Disponible = true,
                            ISBN = "978-6071509636",
                            Stock = 2,
                            Titulo = "Química"
                        });
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("TEXT");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("TEXT");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreSolicitante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Prestamo", b =>
                {
                    b.HasOne("VisualizadorEstructuras.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("VisualizadorEstructuras.Models.Reserva", b =>
                {
                    b.HasOne("VisualizadorEstructuras.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });
#pragma warning restore 612, 618
        }
    }
}
